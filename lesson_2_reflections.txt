What happens when you initialize a repository? Why do you need to do it?

  It creates a .git folder with metadata so git can track changes and save other versions.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  The staging area is subset of the files in the working directory.
  It allows you to keep track of which files have changes you want to commit next.

How can you use the staging area to make sure you have one commit per logical
change?

  If you have made more than one change before committing, you can commit just one,
  provided they are not in the same file.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  In creating multiple versions of books (provided they were plain-text editable)
  Once interior was done, branch off EPUB version.

  (After watching video - multiple branches to work on different features,
  which you can merge and commit individually.)

How do the diagrams help you visualize the branch structure?
  Diagrams show clearly where a branch split from the master, and which are unreachable.
  Also illustrates the "detatched head" message git gives when checking out older
  unnamed branches. If you modify it, it will be unreachable unless named as branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

All the changes (additions and deletions) made in both branches are made in the final merged branch.
It generally involves a side-branch being merged back into a larger branch.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
